<?php


namespace Encore\OrgRbac\Http\Controllers;


use Encore\OrgRbac\Layout\Content;
use Encore\OrgRbac\Form;
use Encore\OrgRbac\Models\Enums\OrgType;
use Encore\OrgRbac\Traits\PlatformPermission;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DepartmentController extends AdminController
{
    use PlatformPermission;
    /**
     * Title for current resource.
     *
     * @var string
     */
    protected $title = '部门';

    protected $model;

    protected $companyId;
    protected $parentId;
    /**
     * @var
     */
    protected $service;

    public function __construct(Request $request)
    {
        $departmentModel = config('org.database.departments_model');
        $this->model = new $departmentModel();
        parent::__construct($request);
        $this->companyId = $request->input('company_id');
        $this->parentId = $request->input('parent_id');
        if ($this->parentId) {
            $departmentModel = $departmentModel::find($this->parentId);
            $this->companyId = $departmentModel->company->id;
        }
    }


    public function edit($id, Content $content)
    {
        session()->put('department_back_url',request()->get('back_url'));
        return parent::edit($id, $content); // TODO: Change the autogenerated stub
    }


    /**
     *
     */
    protected function form()
    {
        $companyModel = config('org.database.companies_model');
        $form = new Form($this->model);

        $form->select('company_id', '公司')
            ->options($companyModel::pluck('name','id'))
            ->default($this->companyId)
            ->required()->disable();
        $form->hidden("company_id",'公司ID')->value($this->companyId);
        $form->select('parent_id',"父级部门")
            ->options(config('org.database.departments_tree')::selectOptions(function ($query) {
                return $query->where('company_id',$this->companyId);
            }))
            ->default($this->parentId);
        $form->text('name', '名称')->required();
        $form->number('order','排序')->default(0)->required();

        $form->saving(function (Form $form) {
            if ($form->isCreating()) $form->model()->id = app('primaryKeyGenerate')->load(config('org.database.departments_primary_key_generate_driver'))->generate();
            if (empty($form->model()->parent_id)) $form->model()->parent_id = 0;
        });
        $form->saved(function (Form $form) {
            if ($form->isEditing()) $backUrl = $this->getBackUrl();
            if ($form->isCreating()) $backUrl = url("admin/auth/organizations")."?type=".OrgType::DEPARTMENT."&main_id=".$form->model()->parent_id;
            return redirect($backUrl)->withErrors(admin_toastr('已保存','success'));
        });
        return $form;
    }

    protected function getBackUrl()
    {
        $backUrl = session()->pull('department_back_url');
        $backUrl = base64_decode($backUrl);
        if (!$backUrl) $backUrl = url('admin/auth/organizations');
        return $backUrl;
    }

    public function destroy($id)
    {
        $trans = [
            'failed'    => trans('admin.delete_failed'),
            'succeeded' => trans('admin.delete_succeeded'),
        ];
        try {
            DB::transaction(function () use ($id) {
                //判断当前ID是否存在
                $model = $this->model->find($id);
                if (empty($model)) {
                    throw new \Exception("the current department does not exist");
                }
                //判断当前部门下是否有员工
                if ($model->users()->exists()) {
                    throw new \Exception("there are users under the current department");
                }
                $this->model->where('id',$id)->delete();
            });
            return $this->actionSuccess($trans['succeeded']);
        } catch (\Exception $exception) {
            return $this->actionError("{$trans['failed']} : {$exception->getMessage()}");
        }
    }

}
